Imports System.Net
Imports System.Net.Sockets

Public Class PanelPrincipal
    Dim tabla As New DataTable
    Private Sub PanelPrincipal_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        Dim sv As New Cservidor


        sv.Listar_servidores()
        tabla = sv.tabla
        tabla.Columns.Add("Estado")
        'debo armar el formato de la grilla
        Dim ch As New DataGridViewCheckBoxColumn
        Dim bt As New DataGridViewButtonColumn
        Dim bt2 As New DataGridViewButtonColumn

        DGprincipal.Columns.Add(ch) 'agrego la columna de checkbox
        '
        DGprincipal.DataSource = tabla
        DGprincipal.Columns("Estado").DefaultCellStyle.BackColor = Color.LightGray
        'Button7.PerformClick()

    End Sub



    Private Sub DGprincipal_CellContentClick(sender As Object, e As DataGridViewCellEventArgs) Handles DGprincipal.CellContentClick
        If e.RowIndex = -1 Then
            Return
        End If
        If DGprincipal.Columns(e.ColumnIndex).Name.Equals("") Then
            Dim rw As DataGridViewRow = DGprincipal.Rows(e.RowIndex)
            Dim cselect As DataGridViewCheckBoxCell = rw.Cells("")

            If Convert.ToBoolean(cselect.Value) Then

                'PINTA LA CELDA DEL CHECK
                rw.DefaultCellStyle.BackColor = Color.Azure

                'AQUI SE DEBERIA REALIZAR LAS COMPROBACIONES PARA DARLE ESTADO AL SERVIDOR
                If comprobar_conexion(rw.Cells.Item(3).Value, 30000) Then
                    rw.Cells.Item(6).Style.BackColor = Color.Green
                Else
                    rw.Cells.Item(6).Style.BackColor = Color.Red
                End If

            Else
                rw.Cells.Item(6).Style.BackColor = Color.LightGray
            End If

        End If
    End Sub

    Private Sub DGprincipal_CurrentCellDirtyStateChanged(sender As Object, e As EventArgs) Handles DGprincipal.CurrentCellDirtyStateChanged
        If DGprincipal.IsCurrentCellDirty Then
            DGprincipal.CommitEdit(DataGridViewDataErrorContexts.Commit)
        End If
    End Sub

    Private Function comprobar_conexion(direccion_ip As String, parametro As Integer)
        Dim estado As Boolean
        'se tienen que cargar los datos de la tabla parametros

        Try
            If My.Computer.Network.Ping(direccion_ip, parametro) Then
                'MsgBox("Conexion existosa")
                estado = True
            Else
                'MsgBox("No hay conexion")
                estado = False
            End If
        Catch ex As Net.NetworkInformation.PingException
            MessageBox.Show("este es el error:" & vbCrLf & ex.Message, "", MessageBoxButtons.OK, MessageBoxIcon.Error)
            estado = False
        End Try
        Return estado
    End Function

    Private Sub Button7_Click(sender As Object, e As EventArgs) Handles Button7.Click
        'Comprobar ping, aplicaciones y servicios a todos los servidores de la grilla
        'Cargo datos de la tabla parametros
        Dim tparametro As New Cparametros
        For Each fila As DataRow In tabla.Rows
            tparametro.Buscar_valor_parametros("Tiempo de respuesta")
            If comprobar_conexion(fila.Item(2), tparametro.tabla.Rows.Item(0).Item(0)) Then

                'consultar por aplicacion y servicios del servidor 

                'consultare una aplicacion con puerto.
                Dim apls As New Caplicacion

                apls.Buscar_aplicacion_servidor(Val(fila.Item(0)))
                For Each fa As DataRow In apls.tabla.Rows
                    Dim apl As New Caplicacion
                    apl.Buscar_aplicacion(fa.Item(0))
                    For Each ap As DataRow In apl.tabla.Rows

                        If Conectarse_a_puerto(fila.Item(2), ap.Item(2)) Then
                            DGprincipal.Rows.Item(tabla.Rows.IndexOf(fila)).Cells.Item(6).Style.BackColor = Color.LightGreen
                            fila.Item(5) = "Correcto puerto" + ap.Item(2).ToString
                        Else
                            DGprincipal.Rows.Item(tabla.Rows.IndexOf(fila)).Cells.Item(6).Style.BackColor = Color.Red
                            fila.Item(5) = "Fallò puerto" + ap.Item(2).ToString
                        End If
                        Application.DoEvents()
                    Next
                    Application.DoEvents()
                Next

            Else
                    DGprincipal.Rows.Item(tabla.Rows.IndexOf(fila)).Cells.Item(6).Style.BackColor = Color.Red
                fila.Item(5) = "Fallò ping"
            End If
            Application.DoEvents()
        Next
    End Sub


    Public Function Conectarse_a_puerto(address As String, port As Integer) As Boolean
        Dim timeout As Integer = 3000
        Dim result = False
        Try
            Using socket = New Sockets.Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp)
                Dim asyncResult As IAsyncResult = socket.BeginConnect(address, port, Nothing, Nothing)
                result = asyncResult.AsyncWaitHandle.WaitOne(timeout, True)
                socket.Close()
            End Using
            Return result
        Catch
            Return False
        End Try
    End Function
End Class